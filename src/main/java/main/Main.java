package main;

import rsa.RSA;
import rsa.RSAPrivateKey;
import rsa.RSAPublicKey;

import java.math.BigInteger;

public class Main {

    public static void main (String[] args){
//        RSAKeyPair keyPair = RSA.generateKeys(32);
//        RSAPrivateKey privateKey = keyPair.getPrivateKey();
//        RSAPublicKey publicKey = keyPair.getPublicKey();
        RSAPrivateKey privateKey = new RSAPrivateKey(new BigInteger("1428957008135686416279833060268656358663089744952052089778232221615258706421347721092463764923918473459610514013594071217731534045144034343134994791126343265903748207323769448462750880940490989059159245901139983089548343538913563026763729461733052007731013311211780209945830142227740364705655712498544978026806945081788528950698252232775193868011957872205055345255126171071232853650132332780087742062912406330293702252725067052536762699519671681689287737303167406323070460018056785477405647385188453776726662449279505527249037636173161482642884952837258924017033089257600951134237000738221411443504048329376715065037"), new BigInteger("1786196260169608020349791325335820448328862181190065112222790277019073383026684651365579706154898091824513142516992589022164417556430042928918743488907929082379685259154711810578438601175613736323949057376424978861935429423641953783454661827166315009663766639014725262432287677784675455882069640623181222533597374696992125620068479541651076808133700897333475968247306681583709333576009809973364558785639973718706888440964239251239613892033820110741494829735151020948348989669589051523163573228434707751426357330158933507662432803435615431724902906039641398955853932323348463164453483578604303178399760427420402531977"));
        RSAPublicKey publicKey = new RSAPublicKey(new BigInteger("5"), new BigInteger("1786196260169608020349791325335820448328862181190065112222790277019073383026684651365579706154898091824513142516992589022164417556430042928918743488907929082379685259154711810578438601175613736323949057376424978861935429423641953783454661827166315009663766639014725262432287677784675455882069640623181222533597374696992125620068479541651076808133700897333475968247306681583709333576009809973364558785639973718706888440964239251239613892033820110741494829735151020948348989669589051523163573228434707751426357330158933507662432803435615431724902906039641398955853932323348463164453483578604303178399760427420402531977"));

        BigInteger cipher =  RSA.encode(new BigInteger("Hell√≥".getBytes()), publicKey);
        System.out.println (cipher);

        System.out.println (new String(RSA.decode(cipher, privateKey).toByteArray()));

    }
}
